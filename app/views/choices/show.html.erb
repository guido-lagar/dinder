 <div class="container container-show">


    <% option1 = @options[1]%>
    <% option2 = @options[2]%>
    <% option3 = @options[3]%>



    <div class="row" style="justify-content: center;">

        <div class="col-6">
            <div class="cube-container">
              <%= link_to choice_option_option_choices_path(@choice, @optioni), data: {turbo_method: :post } do%>
                <div class = "cube left-cube">

                  <%= cl_image_tag @optioni.photo.key, data: {
                  add_in_choices_target: "event",
                  action: "click->add-in-choices#add",
                  id: @optioni.id,
                  }
                  %>

                  <%= cl_image_tag option2.photo.key %>
                  <%= cl_image_tag option3.photo.key %>
                  <%= cl_image_tag option1.photo.key %>

                </div>
             <% end %>

            </div>

        </div>



        <div class="col-6">

          <div class="cube-container">

              <%= link_to choice_option_option_choices_path(@choice, @optionk), data: {turbo_method: :post } do%>

                <div class = "cube right-cube">

                  <%= cl_image_tag @optionk.photo.key,  :crop=>"fill", data: {
                  add_in_choices_target: "event",
                  action: "click->add-in-choices#add",
                  id: @optionk.id

                  }
                  %>
                <%= cl_image_tag option1.photo.key,  :crop=>"fill" %>
                  <%= cl_image_tag option2.photo.key,  :crop=>"fill" %>
                  <%= cl_image_tag option3.photo.key,  :crop=>"fill" %>
                </div>
              <% end %>
            </div>
                  <%# <div class="name-of-option-b">
                  <%= @optionk.name %>
                  <%# </div> %>
         </div>

    </div>

</div>

<container-new>
            <div class="parent-div">
                <div class="img-container">
                  <div id="img1">
                    <%= @optioni.name %>
                  </div>
                </div>
                <div class="line-break-container">
                  <div id="line-break"></div>
                </div>
                <div class="img-container">
                  <div id="img2">
                    <%= @optionk.name %>
                  </div>
                </div>
              </div>
</container-new>





<style>

@keyframes reveal-left-to-right {
  from {
    opacity: 1;
    transform: translateX(110%);
  }
  to {
    opacity: 1;
    transform: translateX(0px);
  }
}

@keyframes reveal-right-to-left {
  from {
    opacity: 1;
    transform: translateX(-110%);
  }
  to {
    opacity: 1;
    transform: translateX(0px);
  }
}

@keyframes grow-line {
  from {
    opacity: 0;
    height: 0;
  }
  to {
    opacity: 1;
    height: 100%;
  }
}

.container-new {
  background-color: navy;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.parent-div {
  background-color: transparent;
  height: 100px;
  width: 50%;
  display: flex;
  justify-content: space-between;
}

.line-break-container {
  display: flex;
  align-items: center;
}

#line-break {
  width: 3px;
  background-color: white;
  z-index: 3;
  animation: grow-line linear 1s forwards;
}

.img-container {
  height: 100%;
  overflow: hidden;
  flex: 1 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}

#img1, #img2 {
  color: black;
  font-size: 1.25rem;
  overflow: hidden;

  display: flex;
  justify-content: center;
  align-items: center;
}

#img1 {
  transform: translateX(110%);
}

#img2 {
  transform: translateX(-110%);
}

#img1.apply-animation {
  animation: reveal-left-to-right ease-out 1s forwards;
}

#img2.apply-animation {
  animation: reveal-right-to-left ease-out 1s forwards;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  setTimeout(() => {
    const img1 = document.querySelector("#img1");
    const img2 = document.querySelector("#img2");
    img1.className += "apply-animation";
    img2.className += "apply-animation";
  }, 1300);
});
</script>
